name: Test python

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.6.0
      - name: Before install
        run: |
          pip install --upgrade pip setuptools py
          pip install twine wheel coveralls
          pip install poetry==1.0.10
          poetry config virtualenvs.create false
      - name: Install dependencies
        run: |
          poetry install
          cat poetry.lock
      - name: Test with pytest
        run: |
          "./run-tests.sh"
      - name: Push schemas
        if: github.ref == 'refs/heads/master'
        run: "./push-schemas.sh"
#      - name: Coveralls
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build package to publish
        run: |
          poetry build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Use built artifacts
          uses: actions/download-artifact@v2
          with:
            name: dist
            path: dist

        - name: List files
          run: |
            ls -la
            ls -la dist
        - name: Publish package
          if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
          uses: pypa/gh-action-pypi-publish@master
          with:
            skip_existing: true
            user: __token__
            password: ${{ secrets.PYPI_PASSWORD }}
